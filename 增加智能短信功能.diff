Index: src/com/android/mms/ui/ComposeMessageActivity.java
===================================================================
--- src/com/android/mms/ui/ComposeMessageActivity.java	(revision 3877)
+++ src/com/android/mms/ui/ComposeMessageActivity.java	(revision 3878)
@@ -4240,6 +4240,9 @@
         /// @}
 
         super.onDestroy();
+        if (mMsgListView.getChildCount() > 0) {
+            ((MessageListItem)mMsgListView.getChildAt(0)).clearCache();
+        }
     }
 
     @Override
Index: src/com/android/mms/ui/MessageListItem.java
===================================================================
--- src/com/android/mms/ui/MessageListItem.java	(revision 3877)
+++ src/com/android/mms/ui/MessageListItem.java	(revision 3878)
@@ -114,6 +114,19 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
+import cn.cmcc.online.smsapi.CardView;
+import cn.cmcc.online.smsapi.Menu;
+import cn.cmcc.online.smsapi.NCardViewHelper;
+import cn.cmcc.online.smsapi.SmsCardData;
+import cn.cmcc.online.smsapi.SmsPortData;
+import cn.cmcc.online.smsapi.TerminalApi;
+import android.widget.FrameLayout;
+import android.os.Handler;
+import android.os.HandlerThread;
+import android.os.Looper;
+import android.os.Message;
+import java.util.List;
+
 /// @}
 /**
  * This class provides view of a message in the messages list.
@@ -236,6 +249,18 @@
 
     IOpMessageListItemExt mOpMessageListItemExt;
 
+
+    private LinearLayout mCardContainer;
+    private LinearLayout mItemContainer;
+    private FrameLayout messageContentOrCardContainer;
+
+    private Handler mUIHandler;
+    private Handler mWorkHandler;
+    private HandlerThread mHandlerThread;
+
+
+
+
     public MessageListItem(Context context, View view) {
         super(context);
         addView(view);
@@ -248,6 +273,11 @@
         }
         initPlugin(this.getContext());
         onFinishInflateView();
+
+        mUIHandler = new Handler(Looper.getMainLooper());
+        mHandlerThread = new HandlerThread("MessageListIem-Thread");
+        mHandlerThread.start();
+        mWorkHandler = new LoadDataHandler(mHandlerThread.getLooper(), mContext);
     }
 
     public View findView(int id) {
@@ -375,6 +405,9 @@
         mSubDivider = (View) findView(sim_divider);
         mExpireText = (TextView) findView(text_expire);
         mOpMessageListItemExt.onFinishInflateView(mExpireText, mSelectedBox, mBodyTextView);
+
+        mCardContainer = (LinearLayout) findViewById(R.id.cardContainer);
+        mItemContainer = (LinearLayout) findViewById(R.id.mms_layout_view_parent);
     }
 
     public void bind(MessageItem msgItem,
@@ -498,6 +531,111 @@
         mHandler = handler;
     }
 
+    //-------------------------------
+
+
+    private static class LoadDataHandler extends Handler {
+        private Object[] param;
+        private Context context;
+
+        public LoadDataHandler(Looper looper, Context context) {
+            super(looper);
+            this.context = context;
+        }
+
+        @Override
+        public void handleMessage(Message msg) {
+            param = (Object[]) msg.obj;
+            log("handleMessage");
+            int id = (int) param[0];
+            String serverport = (String) param[1];
+            String smsText = (String) param[2];
+            long smsDate = (long) param[3];
+            LoadCardDatacallback loadCardDatacallback = (LoadCardDatacallback) param[4];
+            SmsCardData cardData = NCardViewHelper.getInstance().getCardData(context, id, serverport, smsText, smsDate);
+            loadCardDatacallback.load(id, cardData);
+        }
+    }
+
+    private interface LoadMessageCallback {
+        void load(List<MessageItem> mItems);
+    }
+
+    private interface LoadMenuCallback {
+        void load(List<Menu> menuList);
+    }
+
+    private interface LoadCardDatacallback {
+        void load(int id, SmsCardData cardData);
+    }
+
+    private void loadCardDataAsync(int id, String port, String smsText, long smsDate, LoadCardDatacallback callback) {
+        Message message = mWorkHandler.obtainMessage(1);
+        message.obj = new Object[]{id, port, smsText, smsDate, callback};
+        mWorkHandler.sendMessage(message);
+    }
+
+    public void getCardInfo () {
+        new Thread(){
+           @Override
+           public void run() {
+                Log.d(TAG, "zly --> getCardInfo mMsgId:" + mMessageItem.mMsgId + " mAddress:" +
+                        mMessageItem.mAddress + " mSmsDate:" + mMessageItem.mSmsDate + " mBody:" + mMessageItem.mBody);
+                if (null == mMessageItem) {
+                    return;
+                }
+
+                loadCardDataAsync((int)mMessageItem.mMsgId, mMessageItem.mAddress, mMessageItem.mBody, mMessageItem.mSmsDate, new LoadCardDatacallback() {
+                    @Override
+                    public void load(int id, final SmsCardData cardData) {
+                        if (null != mMessageItem) {
+                            log("id:" + id + " mMsgId:" + mMessageItem.mMsgId);
+                        }
+
+                        if (null == mMessageItem || id != mMessageItem.mMsgId || cardData == null || !cardData.isMatched()) {
+                            Log.d(TAG, "zly --> getCardInfo load failed");
+                            return;
+                        }
+
+                        mUIHandler.post(new Runnable() {
+                            @Override
+                            public void run() {
+                                int cardType = NCardViewHelper.getInstance().getCardType(cardData);
+                                CardView cardView = NCardViewHelper.getInstance().obtainCardView(mContext, cardType, null);
+
+                                if (cardView.onUpdate(cardData)) {
+                                    //cardView.setShadow(false);
+                                    mCardContainer.removeAllViews();
+                                    mCardContainer.addView(cardView);
+                                    mItemContainer.setVisibility(View.GONE);
+                                    mCardContainer.setVisibility(View.VISIBLE);
+                                    log("cardView onupdate sucess");
+                                } else {
+                                    log("cardView onupdate failed");
+                                    mItemContainer.setVisibility(View.VISIBLE);
+                                    mCardContainer.setVisibility(View.GONE);
+                                }
+                            }
+                        });
+                    }
+                });
+           }
+        }.start();
+
+
+    }
+
+    public void clearCache() {
+        if(NCardViewHelper.getInstance() != null && mHandlerThread != null) {
+            NCardViewHelper.getInstance().destroy();
+            mHandlerThread.quitSafely();
+        }
+    }
+
+    private static void log(String str) {
+        Log.d(TAG, "zly --> " + str);
+    }
+
     private void bindNotifInd() {
         showMmsView(false);
         // add for vcard
Index: src/com/android/mms/ui/MessageUtils.java
===================================================================
--- src/com/android/mms/ui/MessageUtils.java	(revision 3877)
+++ src/com/android/mms/ui/MessageUtils.java	(revision 3878)
@@ -166,6 +166,11 @@
 import java.util.Locale;
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
+import android.util.LruCache;
+import android.webkit.WebView;
+//import android.webkit.WebView;
+import cn.cmcc.online.smsapi.CardView;
+import cn.cmcc.online.smsapi.SmsPortData;
 
 /**
  * An utility class for managing messages.
@@ -175,11 +180,121 @@
         void onResizeResult(PduPart part, boolean append);
     }
 
+    public static final int  CMCC_CARD_CACHE_SIZE = 200;
+    private static final LruCache<String,CmccCard> mCmccDataCache = new LruCache<String,CmccCard>(CMCC_CARD_CACHE_SIZE);
+    private static final LruCache<String,String> mJisonCache = new LruCache<String,String>(CMCC_CARD_CACHE_SIZE);
+    private static final LruCache<String,SmsPortData> mSmsPortDateCache = new LruCache<String,SmsPortData>(CMCC_CARD_CACHE_SIZE);
+
     private static final String TAG = LogTag.TAG;
 
     private static String sLocalNumber;
+
     private static String[] sNoSubjectStrings;
+        public static class CmccCard {
+            public int mWifiState;
+            public int mCardType;
+            public CardView mCardView;
+            public CmccCard(int wifiState, CardView cardView) {
+                    mWifiState = wifiState;
+                    mCardView = cardView;
+            }
+        }
 
+        /**
+        * save bitmap to cache
+        */
+        public static void addCardToMemoryCache(String key, CmccCard card) {
+        if (mCmccDataCache != null) {
+                synchronized (mCmccDataCache){
+                        if(getCardFromMemCache(key) != null) {
+                                mCmccDataCache.remove(key);
+                        }
+                mCmccDataCache.put(key, card);
+                }
+        }
+        }
+        /**
+        * get bitmap from cache
+        */
+        public static CmccCard getCardFromMemCache(String key) {
+                if (mCmccDataCache != null) {
+                        return mCmccDataCache.get(key);
+                }
+                return null;
+        }
+        /**
+        * save JISON to cache
+        */
+        public static void addSmsPortDataToMemoryCache(String key, SmsPortData Portdata) {
+            if (mSmsPortDateCache != null) {
+                synchronized (mSmsPortDateCache) {
+                    mSmsPortDateCache.put(key, Portdata);
+                }
+            }
+        }
+
+
+        /**
+        * get SmsPortData from cache
+        */
+        public static SmsPortData getSmsPortDataFromMemCache(String key) {
+            Log.d("yunlong",TAG+"--getSmsPortDataFromMemCache--->key="+key+"----->mSmsPortDateCache="+mSmsPortDateCache);
+            if (mSmsPortDateCache != null) {
+                return mSmsPortDateCache.get(key);
+            }
+            return null;
+        }
+
+
+
+        /**
+     * cache for CMCC-cache
+     */
+    public static void clearCmccCache(){
+        if(mCmccDataCache != null){
+            mCmccDataCache.evictAll();
+        }
+
+        if(mSmsPortDateCache != null){
+            mSmsPortDateCache.evictAll();
+        }
+    }
+
+   /**
+    ** check if it is WIFI and WIFI is available. CMCC LOGO down only when WLAN is available
+   */
+   public static boolean isWifiNetwork(Context context) {
+        ConnectivityManager connManager = (ConnectivityManager) context
+                .getSystemService(Context.CONNECTIVITY_SERVICE);
+
+        if (null == connManager) {
+           Log.w(TAG, "connectivity manager is null when checking active network");
+            return false;
+        }
+
+        NetworkInfo info = connManager.getActiveNetworkInfo();
+        if (info == null) {
+            Log.w(TAG, "no active network when checking active network");
+            return false;
+        }
+
+        if (!info.isConnected()) {
+            Log.w(TAG, "current network is not connected when checking active network");
+            return false;
+        }
+
+        if (!info.isAvailable()) {
+            Log.w(TAG, "current network is not available when checking active network");
+            return false;
+        }
+
+        if (ConnectivityManager.TYPE_WIFI == info.getType()) {
+            return true;
+        }
+        return false;
+    }
+
+
     // Cache of both groups of space-separated ids to their full
     // comma-separated display names, as well as individual ids to
     // display names.

Property changes on: src/com/android/mms/ui/MessageUtils.java
___________________________________________________________________
Modified: svn:mergeinfo
## -0,0 +0,1 ##
   Merged /L05A/Trunk/ALPS-MP-N1.MP18-V1_AUS6739_66_N1_INHOUSE/vendor/mediatek/proprietary/packages/apps/Mms/src/com/android/mms/ui/MessageUtils.java:r3877
Index: src/com/android/mms/ui/ConversationList.java
===================================================================
--- src/com/android/mms/ui/ConversationList.java	(revision 3877)
+++ src/com/android/mms/ui/ConversationList.java	(revision 3878)
@@ -134,6 +134,19 @@
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashSet;
+
+import android.util.LruCache;
+import android.graphics.Bitmap;
+import java.io.ByteArrayInputStream;
+import java.io.InputStream;
+import java.security.MessageDigest;
+import java.security.cert.CertificateFactory;
+import java.security.cert.X509Certificate;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.content.pm.Signature;
+
+
 /**
  * This activity provides a list view of existing conversations.
  */
@@ -266,6 +279,10 @@
     // add for mutli user
     private boolean isUserHasPerUsingMms = true;
 
+    public static final int HAVE_STICKTOPED_CONVERSATIONS_TOKEN  = 1804;
+    private LruCache<String, Bitmap> mLogoIconCache;
+
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -350,6 +367,22 @@
         mIpConvList = IpMessageUtils.getIpMessagePlugin(this).getIpConversationList();
         mIpConvList.onIpConversationListCreate(this, mIpConvListCallback,
                 mListView, mIpEmptyView, mNetworkStatusBar, networkStatusTextView);
+
+
+        Log.e(TAG, "getCertificateSHA1Fingerprint -->" + getCertificateSHA1Fingerprint(this));
+        if(MmsConfig.isCmccFeature()) {
+            final int maxMemory = (int) (Runtime.getRuntime().maxMemory() / 1024);
+            // Use 1/16th of the available memory for this memory cache.
+            final int cacheSize = maxMemory / 16;
+
+            mLogoIconCache = new LruCache<String, Bitmap>(cacheSize) {
+                    @Override
+                    protected int sizeOf(String key, Bitmap bitmap) {
+                        // The cache size will be measured in kilobytes rather than number of items.
+                        return bitmap.getByteCount() / 1024;
+                    }
+                    };
+        }
     }
 
     private void setupActionBar() {
@@ -914,6 +947,76 @@
         return false;
     }
 
+
+    /**IUV:add-start for CMCC-cardview by yunlong.shen on 2017/11/07 */
+    /**
+    * save bitmap to cache
+    */
+    public void addBitmapToMemoryCache(String key, Bitmap bitmap) {
+        if (mLogoIconCache != null && getBitmapFromMemCache(key) == null) {
+            synchronized (mLogoIconCache){
+                mLogoIconCache.put(key, bitmap);
+            }
+        }
+    }
+
+    /**
+    * get bitmap from cache
+    */
+    public Bitmap getBitmapFromMemCache(String key) {
+        if (mLogoIconCache != null) {
+                return mLogoIconCache.get(key);
+        }
+        return null;
+    }
+
+    protected static String getCertificateSHA1Fingerprint(Context context) {
+            String value = null;
+
+        PackageManager pm = context.getPackageManager();
+
+        try {
+            PackageInfo packageInfo = pm.getPackageInfo(context.getPackageName(), PackageManager.GET_SIGNATURES);
+
+            Signature[] signatures = packageInfo.signatures;
+            byte[] cert = signatures[0].toByteArray();
+            InputStream in = new ByteArrayInputStream(cert);
+
+            CertificateFactory cf = CertificateFactory.getInstance("X509");
+            X509Certificate x509Certificate = (X509Certificate) cf.generateCertificate(in);
+
+            MessageDigest messageDigest = MessageDigest.getInstance("SHA1");
+            byte[] publicKey = messageDigest.digest(x509Certificate.getEncoded());
+
+            value = bytesToHexStringWithSemi(publicKey);
+        } catch (Exception e) {
+
+        }
+
+        return value;
+    }
+
+    protected static String bytesToHexStringWithSemi(byte[] bytes) {
+        StringBuilder stringBuilder = new StringBuilder("");
+        if (bytes == null || bytes.length <= 0) {
+            return null;
+        }
+        for (int i = 0; i < bytes.length; i++) {
+            int v = bytes[i] & 0xFF;
+            String hv = Integer.toHexString(v);
+            if (hv.length() < 2) {
+                stringBuilder.append(0);
+            }
+            stringBuilder.append(hv.toUpperCase());
+
+            if (i < bytes.length - 1) {
+                stringBuilder.append(':');
+            }
+        }
+        return stringBuilder.toString();
+    }
+
+
     @Override
     protected void onListItemClick(ListView l, View v, int position, long id) {
         // Note: don't read the thread id data from the ConversationListItem view passed in.
Index: src/com/android/mms/MmsApp.java
===================================================================
--- src/com/android/mms/MmsApp.java	(revision 3877)
+++ src/com/android/mms/MmsApp.java	(revision 3878)
@@ -66,6 +66,7 @@
 
 import java.util.HashMap;
 import java.util.Locale;
+import cn.cmcc.online.smsapi.SmsPlus;
 
 public class MmsApp extends Application implements IMmsAppCallback {
     public static final String LOG_TAG = "Mms";
@@ -95,6 +96,10 @@
     private static HandlerThread mToastthread = null;
     private static ToastHandler mToastHandler = null;
 
+    public static final String DUOQU_SDK_CHANNEL = "XHXXOaoQGOME";
+    private static final String DUOQU_SDK_CHANNEL_SECRETKEY = "MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBAIEeLeS4MmuoCngZ3+2pqj/NrXBKDcyArm7CYjIslBsV4hQ14swkzDMwa3xBFX7/crAJevAxUunzwrDha43WuKgxkLH4F2e/HEXtNWlvVRuqoKdXbeIBDpVY+vw4hU3jMVzKs4OmUyuGQPGW1/Lp37O1uKsv3vrvFrblVcddc5qhAgMBAAECgYBklYwO92df8oJlWVLWpCualLGeHjJts3kvk4JHr+6Yww1hzTCm86uX3Qp+u3zxeDJx7JC2+NWsp1Zt0M2mqzUhxmZAkl/7jkhy+eF+MluV/+t2qLkWieRHkuNvpuMxbMwdBF7C7etNBoWsNcsf2DpgTcLR8Dte4UnF7unbXochmQJBALa1/DrBrvA3Shg9CXyeMAoDiaD48eGqcra05KGLyPKB+bazQMkdoMT0vAsR7kNcv4dJ8ICBEgER1ZFbHoLmepMCQQC06OVAfv/9ZaTxR1HMapnbUFWPoJieQkLo+vmprHzyiu8a4bpFbNhRLzudsBuE1ZtbftOe8YZ3N47/9eol4jJ7AkBLrXsotxqHgs8c1QM966OIMkjqNNKzHs9e3/Qm+WglEjLlOr/lzXDOw3OzvhyLKDpohfaos01KxiFIkI5Ft8MjAkEAnMJCBEUH5Lay2i+Gfa7RauyNd0sdc+TOvbrbo17HVhN1ZMG7+nR6bL6U1erHra66U+ntzYhTj/Igg0K/hdwfCQJBAICTMd+VGrwD5hTW8tlU0DXzp1Y0QjOdf0pm2u4J4S0g9U1si8mb0AzmHmuMU61n36OjUKrmOZn2JDW+F1QQfF0=";
+    private static final String DUOQU_SDK_RSAPRVKEY = "MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCKVX50AXOWStSxDRL278RIG5ETAWcI+UehA/dqCYeSxvNKhJCVdUdqex0SqRapF00yRQxokb1/SsGbJfrrXANByuJSN1yRDOm2sPdamBCJ+iX0xidbQiYWK14ESyeMIpB80hssu7nn0mE9qeaSSrlR/mijNbHr7ryUY9aADfMCNQamybVIOCvSpxAdZCtlaQXTnTzHGOfH5DquWlD3Vs+8pEDMjNnO5fNNTVi1A363T0YqYuWyTtHnlHEcKwjWoVlTfFUjyoc6Jx/l2FoB3DsrFcEteTC/YwukX4GL/JpYOBXGJ0++cvfwmK3RR8V7di4t4EbT360EpFgffxyUTOjxAgMBAAECggEAYr1xnGYo1h8lwBbf8YjlJr8eh11Z6UrduO223WZd8gO2RvtmpHfo+PVVpCszdJCgVoB4we89Pq3ikdbDStoLrRue/iZsGVEJRZD9jhm6vHHkQ9po3zfRLcPYwOHQIbPORHpIUV7R7Mn7BOPQI53Yt9ELaWv7SrfGvXih9BeA3JJfgEzGzC561u2OKWW7XiqT2AL1v2r3OoKFamHF+Wf8BpSS0oOrG/9qqrwzfWnTDXjw1dkMz/hzc6f72mFRUED/ZhxxUY95A+nyEKBcnupmPhzkcs7Z314V7CPi2RSeK4OMjmt42EJJn0svqd71aaYdL3W0sSlxicgWuc1yPVjpjQKBgQDrU1+r+EtOc/4SFRU0nX3zlBQgw8mGv0saXCqkjA1iMRWLL6ReWx3C3sutmSjNfKhaj69frJ7XFaEt3VUu6ojWwxfWtsdwxi1kF7kp1GJq44SBFPokf7D2GIyoaketsA1CHTKBIYWZzFCXBlo1Admql83lHP0MXzHxcRZX37TfDwKBgQCWfLbFlZKgvLyF+HuBm+GJvk13LCXSjxC5PD2EYCJOzYPEgjoQPzy7+D16s2i6xCC1xaaAMDlayp7AvshNjGa0Hgc74ptvQ8jXkHGnDl6rPntzPmLytnYBSR1JJjgSkIFshOiTEr6tOksPlF5q5EuySSZ+EX+1H5AuDVGPIWG3/wKBgQC04+TR402346+0pKIlTL7JotUKDpX1z0vi2mApFkMfbI2b7SZTJYUuC2bTbb0Qn7clzfdH+wAqY0T/ZXiaVMyVEWhcsymBxcSUgSvjPI/ejD+Jnd9eeQ1FTr+oofGxUHgQjzMIUgVJoOV+AfMLdf2khYZOjMbzYKWaa4x6RcrZ/wKBgFvbnKVW+73p9xm/54Ph5vXxl8+avyub8JVhVButosN/Z2NYKqEoOKZ0jPKM+OyoM19BWrT8usXU0LrOue28OiTP/5JqbH6qXbpXjUhv2RGmfiyGdFe7UKTQQHQaRDfwxU+8gUrlMkcDQjYsVsXgvOQDCuABRncE4Tl7H8HCmqd5AoGBALc+FIJVZ39XMrpo9YP55SJ35RwCYRsrwsLiwicp7zYhVVXVZx2K3arbcBtFFFB14hZ7g/Up1Qqaq0us8dVy5u6Os3Xl5xuWeXyPWqBdyrvpeys0Y1iy8im14B03FDzogCG/SUtnWRNZe5RMig9iXLv1ubnLnkpHtJS8Uc1XvZIL";
+
     @Override
     public void onCreate() {
         super.onCreate();
@@ -153,6 +158,10 @@
         MmsSystemEventReceiver.delayWakeupService(this);
         /// @}
 
+        if(MmsConfig.isCmccFeature()) {
+            SmsPlus.init(this);
+        }
+
         PDebug.End("MmsApp onCreate");
     }
 
Index: src/com/android/mms/MmsConfig.java
===================================================================
--- src/com/android/mms/MmsConfig.java	(revision 3877)
+++ src/com/android/mms/MmsConfig.java	(revision 3878)
@@ -44,6 +44,7 @@
 
 import org.xmlpull.v1.XmlPullParser;
 import org.xmlpull.v1.XmlPullParserException;
+import android.os.SystemProperties;
 
 import java.io.IOException;
 import java.util.ArrayList;
@@ -750,4 +751,14 @@
         return mOpConfigExt.getMmsServiceConfig();
     }
     /// @}
+
+    public static boolean isCmccFeature() {
+        String optr = SystemProperties.get("ro.operator.optr");
+        String config = SystemProperties.get("gsm.sim.operator.alpha");
+        Log.d(TAG, "zly --> isCmccFeature optr:" + optr + " config:" + config);
+        if ((optr != null && optr.equals("OP01") || (config != null && config.equals("CMCC")))) {
+                return true;
+        }
+        return false;
+    }
 }
Index: libs/sms-plus-5.8.jar
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: libs/sms-plus-5.8.jar
===================================================================
--- libs/sms-plus-5.8.jar	(nonexistent)
+++ libs/sms-plus-5.8.jar	(revision 3878)

Property changes on: libs/sms-plus-5.8.jar
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: res/layout/message_list_item_recv.xml
===================================================================
--- res/layout/message_list_item_recv.xml	(revision 3877)
+++ res/layout/message_list_item_recv.xml	(revision 3878)
@@ -24,6 +24,20 @@
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
     android:orientation="vertical">
+
+    <FrameLayout
+        android:id="@+id/messageContentOrCardContainer"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+    <LinearLayout
+        android:id="@+id/cardContainer"
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" >
+    </LinearLayout>
+
+
 <include android:id="@+id/sim_divider"
     layout="@layout/sim_divider_item" />
 <include android:id="@+id/time_divider"
@@ -114,7 +128,7 @@
             android:maxWidth="246dp"
             android:adjustViewBounds="true"
             android:textColor="#555555"
-            android:textSize="14sp" 
+            android:textSize="14sp"
             android:visibility="gone"
          ></TextView>
         <!-- file attachment view -->
@@ -220,6 +234,17 @@
                 android:layout_gravity="left"
                 android:visibility="gone" />
         </LinearLayout>
+        <LinearLayout
+            android:background="@drawable/textview_border"
+            android:id="@+id/serverMenu"
+            android:orientation="horizontal"
+            android:divider="@drawable/divider_vertical"
+            android:showDividers="middle"
+            android:layout_alignParentBottom="true"
+            android:layout_width="match_parent"
+            android:layout_height="48dp"
+            android:visibility="gone">
+        </LinearLayout>
     </LinearLayout>
 </LinearLayout>
  <ViewStub android:id="@+id/mms_downloading_view_stub"
@@ -230,4 +255,5 @@
 </LinearLayout>
 <include android:id="@+id/on_line_divider"
     layout="@layout/on_line_divider_item" />
+    </FrameLayout>
 </LinearLayout>
Index: res/layout/compose_message_activity.xml
===================================================================
--- res/layout/compose_message_activity.xml	(revision 3877)
+++ res/layout/compose_message_activity.xml	(revision 3878)
@@ -427,6 +427,17 @@
                     android:background="@drawable/sim_sms_multidel_button_selector"></ImageButton>
             </LinearLayout>
         </LinearLayout>
+        <LinearLayout
+            android:background="@drawable/textview_border"
+            android:id="@+id/serverMenu"
+            android:orientation="horizontal"
+            android:divider="@drawable/divider_vertical"
+            android:showDividers="middle"
+            android:layout_alignParentBottom="true"
+            android:layout_width="match_parent"
+            android:layout_height="48dp"
+            android:visibility="gone">
+        </LinearLayout>
     </LinearLayout>
     </com.android.mms.ui.HeightChangedLinearLayout>
 	</RelativeLayout>
Index: res/layout/message_list_item_send.xml
===================================================================
--- res/layout/message_list_item_send.xml	(revision 3877)
+++ res/layout/message_list_item_send.xml	(revision 3878)
@@ -24,6 +24,19 @@
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
     android:orientation="vertical">
+
+    <FrameLayout
+        android:id="@+id/messageContentOrCardContainer"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <LinearLayout
+            android:id="@+id/cardContainer"
+            android:orientation="vertical"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent" >
+        </LinearLayout>
+
 <include android:id="@+id/sim_divider"
     layout="@layout/sim_divider_item" />
 <include android:id="@+id/time_divider"
@@ -184,4 +197,5 @@
 </LinearLayout>
 <include android:id="@+id/on_line_divider"
     layout="@layout/on_line_divider_item" />
+    </FrameLayout>
 </LinearLayout>
Index: res/drawable-hdpi/ic_smart_sms_menu.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: res/drawable-hdpi/ic_smart_sms_menu.png
===================================================================
--- res/drawable-hdpi/ic_smart_sms_menu.png	(nonexistent)
+++ res/drawable-hdpi/ic_smart_sms_menu.png	(revision 3878)

Property changes on: res/drawable-hdpi/ic_smart_sms_menu.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: res/drawable/ic_smart_sms_menu.png
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: res/drawable/ic_smart_sms_menu.png
===================================================================
--- res/drawable/ic_smart_sms_menu.png	(nonexistent)
+++ res/drawable/ic_smart_sms_menu.png	(revision 3878)

Property changes on: res/drawable/ic_smart_sms_menu.png
___________________________________________________________________
Added: svn:mime-type
## -0,0 +1 ##
+application/octet-stream
\ No newline at end of property
Index: res/drawable/list_divider_menu.xml
===================================================================
--- res/drawable/list_divider_menu.xml	(nonexistent)
+++ res/drawable/list_divider_menu.xml	(revision 3878)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<inset xmlns:android="http://schemas.android.com/apk/res/android"
+    android:insetLeft="4dp"
+    android:insetRight="4dp">
+
+    <shape android:shape="rectangle" >
+        <!--<solid android:color="@color/background_color_divider_line" /> -->
+    </shape>
+
+</inset>
Index: res/drawable/textview_border.xml
===================================================================
--- res/drawable/textview_border.xml	(nonexistent)
+++ res/drawable/textview_border.xml	(revision 3878)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle" >
+   <solid android:color="#ffffff" />
+   <stroke android:width="0.5dp" android:color="#c8c8c8"/>
+</shape>
Index: res/drawable/menu_bg.xml
===================================================================
--- res/drawable/menu_bg.xml	(nonexistent)
+++ res/drawable/menu_bg.xml	(revision 3878)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (C) 2015 The Android Open Source Project
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+         http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+-->
+
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item
+        android:state_pressed="true" />
+<!--        android:drawable="@color/menu_item_pressed" -->
+    <item
+        android:state_focused="true" />
+<!--        android:drawable="@color/menu_item_pressed" -->
+    <item
+        android:drawable="@android:color/transparent" />
+</selector>
Index: res/drawable/divider_vertical.xml
===================================================================
--- res/drawable/divider_vertical.xml	(nonexistent)
+++ res/drawable/divider_vertical.xml	(revision 3878)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" android:shape="rectangle" >
+    <solid android:color="#c8c8c8" />
+    <size android:width="1dp" />
+</shape>
Index: Android.mk
===================================================================
--- Android.mk	(revision 3877)
+++ Android.mk	(revision 3878)
@@ -58,7 +58,8 @@
     libphonenumber \
     glide \
     com.android.browser.provider \
-    com.mediatek.omadrm.common
+    com.mediatek.omadrm.common \
+    libcmccsdk
 
 
 LOCAL_SRC_FILES := $(call all-java-files-under, $(src_dirs))
@@ -87,8 +88,10 @@
 
 include $(BUILD_PACKAGE)
 include $(CLEAR_VARS)
-LOCAL_PREBUILT_STATIC_JAVA_LIBRARIES := apachecommons:libs/commons-io.jar
+LOCAL_PREBUILT_STATIC_JAVA_LIBRARIES := apachecommons:libs/commons-io.jar \
+                                    libcmccsdk:libs/sms-plus-5.8.jar 
 include $(BUILD_MULTI_PREBUILT)
 
+
 # This finds and builds the test apk as well, so a single make does both.
 include $(call all-makefiles-under,$(LOCAL_PATH))
Index: AndroidManifest.xml
===================================================================
--- AndroidManifest.xml	(revision 3877)
+++ AndroidManifest.xml	(revision 3878)
@@ -97,6 +97,14 @@
             android:icon="@mipmap/ic_launcher_smsmms"
             android:taskAffinity="android.task.mms"
             android:allowTaskReparenting="true">
+
+        <meta-data
+            android:name="cn.cmcc.online.smsapi.API_KEY"
+            android:value="20041980fc7b4164acc1f11cfecb209b" />
+            <service android:name="cn.cmcc.online.smsapi.CacheService"/>
+            <service android:name="cn.cmcc.online.smsapi.DaService"/>
+
+
         <service android:name=".transaction.MmsPushReceiveService"
                  android:exported="false" />
         <service android:name=".transaction.TransactionService"
